# This file is automatically generated from cmake.toml - DO NOT EDIT
# See https://github.com/build-cpp/cmkr for more information

cmake_minimum_required(VERSION 3.15)

if(CMAKE_SOURCE_DIR STREQUAL CMAKE_BINARY_DIR)
	message(FATAL_ERROR "In-tree builds are not supported. Run CMake from a separate directory: cmake -B build")
endif()

set(CMKR_ROOT_PROJECT OFF)
if(CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)
	set(CMKR_ROOT_PROJECT ON)

	# Bootstrap cmkr and automatically regenerate CMakeLists.txt
	include(cmkr.cmake OPTIONAL RESULT_VARIABLE CMKR_INCLUDE_RESULT)
	if(CMKR_INCLUDE_RESULT)
		cmkr()
	endif()

	# Enable folder support
	set_property(GLOBAL PROPERTY USE_FOLDERS ON)

	# Create a configure-time dependency on cmake.toml to improve IDE support
	set_property(DIRECTORY APPEND PROPERTY CMAKE_CONFIGURE_DEPENDS cmake.toml)
endif()

# Options
option(LIBPL_ENABLE_CLI "" OFF)

project(PatternLanguage)

include(FetchContent)

# Fix warnings about DOWNLOAD_EXTRACT_TIMESTAMP
if(POLICY CMP0135)
	cmake_policy(SET CMP0135 NEW)
endif()
message(STATUS "Fetching PatternLanguage (3f112c02bb78a134f5814d536df9d1430c9e42d5)...")
FetchContent_Declare(PatternLanguage
	GIT_REPOSITORY
		"https://github.com/WerWolv/PatternLanguage"
	GIT_TAG
		3f112c02bb78a134f5814d536df9d1430c9e42d5
)
FetchContent_MakeAvailable(PatternLanguage)

# Target: PatternLanguage
set(PatternLanguage_SOURCES
	cmake.toml
	"src/PatternLanguage.cpp"
	"src/PatternLanguage.h"
)

add_library(PatternLanguage SHARED)

target_sources(PatternLanguage PRIVATE ${PatternLanguage_SOURCES})
source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${PatternLanguage_SOURCES})

target_compile_features(PatternLanguage PUBLIC
	cxx_std_23
)

target_link_libraries(PatternLanguage PUBLIC
	libpl
	libpl-gen
	fmt::fmt-header-only
)

set_target_properties(PatternLanguage PROPERTIES
	OUTPUT_NAME
		PatternLanguage
)

# Target: example
set(example_SOURCES
	cmake.toml
	"src/example.cpp"
)

add_executable(example)

target_sources(example PRIVATE ${example_SOURCES})
source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${example_SOURCES})

target_link_libraries(example PRIVATE
	PatternLanguage
)

get_directory_property(CMKR_VS_STARTUP_PROJECT DIRECTORY ${PROJECT_SOURCE_DIR} DEFINITION VS_STARTUP_PROJECT)
if(NOT CMKR_VS_STARTUP_PROJECT)
	set_property(DIRECTORY ${PROJECT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT example)
endif()
